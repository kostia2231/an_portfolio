---
import "../styles/global.css";
type Image = {
    transformed_url: string;
    transformed_url_blured: string;
};
const res = await fetch("http://anastasiiapotapova.com/api/data.json");
const res_obj = await res.json();
const imgs: Image[] = res_obj.resources;
const img_urls = imgs.map((img) => img.transformed_url);
const imgs_urls_blured = imgs.map((img) => img.transformed_url_blured);
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anastasiia Potapova</title>
    {img_urls.map((url) => <link rel="preload" as="image" href={url} />)}
    {
        imgs_urls_blured.map((url) => (
            <link rel="preload" as="image" href={url} />
        ))
    }
    <link rel="icon" href="/favicon-16x16.png" type="image/png" />

    <style is:inline>
        .image-container {
            position: relative;
            width: fit-content;
            overflow: hidden;
            border-radius: 3.5px;
            will-change: transform;
        }

        .image-sharp,
        .image-blurred {
            max-height: 75vh;
            width: auto;
            object-fit: cover;
            border-radius: 3.5px;
            will-change: opacity;
        }

        .image-sharp {
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            z-index: 1;
            transition: opacity 0.4s ease;
        }

        .image-container.in-center .image-sharp {
            opacity: 1;
        }

        #img_scroll_area_one,
        #img_scroll_area_two {
            transition: opacity 0.4s ease-out;
        }

        /* @media (max-width: 500px) {
            .image-sharp,
            .image-blurred {
                height: auto;
                width: 100%;
            }
        } */
    </style>
</head>
<div style="visibility: visible;" id="body">
    <div class="text-[9px] max-[500px]:text-[10px] bg-white h-fit">
        <div
            class="mt-4 fixed w-screen z-30 text-white max-[500px]:hidden handle_from_top mix-blend-difference"
        >
            <div class="text-center">
                <a
                    id="view_change_button"
                    class="cursor-pointer hover:opacity-50 inline-block px-3 rounded-sm"
                    >VIEW</a
                >
            </div>
        </div>
        <div
            class="mb-4 fixed w-screen z-30 text-white bottom-0 handle_from_bottom max-[500px]:text-white mix-blend-difference"
        >
            <div class="text-center">ALL RIGHTS RESERVED</div>
            <div class="text-center">©2025</div>
        </div>
        <div
            class="fixed px-4 mt-[50vh] max-[500px]:px-4 w-screen max-[500px]:mt-[47vh] z-30 max-w-[1440px] pointer-events-none max-[500px]:text-white max-[500px]:mix-blend-difference"
            id="middle"
        >
            <div class="flex justify-between">
                <div class="handle_from_left">
                    <p>ANASTASIIA POTAPOVA</p>
                </div>
                <div class="flex gap-4 handle_from_right pointer-events-auto">
                    <a href="https://www.instagram.com/ana.sta.sea/">
                        <p class="cursor-pointer hover:opacity-50">INSTAGRAM</p>
                    </a>
                    <a href="mailto:potapova.nana@gmail.com">
                        <p class="cursor-pointer hover:opacity-50">E—MAIL</p>
                    </a>
                </div>
            </div>
        </div>
        <div id="loader" class="flex">
            <p class="m-auto mt-[50vh] max-[500px]:mt-[47vh]">
                <span id="progress">0</span>%
            </p>
        </div>
        <img
            src=""
            id="image_overlay"
            class="rounded-xs fixed h-[80vh] left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none z-10 transition-opacity duration-500 ease-out opacity-0"
        />

        <div
            id="content"
            style="visibility: hidden;"
            class="transition-all duration-400 ease-out opacity-0"
        >
            <div
                class="flex flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:pb-[60vh] max-[500px]:mx-0 w-full transition-all duration-500 ease-out opacity-100"
                id="img_scroll_area_one"
            >
                <div
                    id="img_wrapper"
                    class="flex flex-nowrap flex-col justify-center gap-1 max-[500px]:gap-1 items-center overflow-hidden my-11 max-[500px]:my-0 max-[500px]:grid-cols-1 w-fit pb-12 max-[500px]:pb-0 opacity-100"
                >
                    {
                        img_urls.map((url, index) => (
                            <div
                                class="image-container relative w-fit overflow-hidden rounded-xs"
                                id="img_group"
                                data-index={index}
                            >
                                <img
                                    src={imgs_urls_blured[index]}
                                    alt="img blur"
                                    class="image-blurred max-[500px]:h-auto max-[500px]:w-full object-cover rounded-xs h-[75vh] transition-all duration-700 ease-in-out w-auto relative"
                                />
                                <img
                                    src={url}
                                    alt="img sharp"
                                    class="image-sharp max-[500px]:h-auto max-[500px]:w-full object-cover rounded-xs h-[75vh] transition-all duration-700 ease-in-out w-auto relative"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>

            <div
                class="hidden flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:mx-0 w-full transition-all opacity-0"
                id="img_scroll_area_two"
            >
                <div
                    class="grid grid-cols-4 w-full max-w-[800px] mx-auto my-3 max-[500px]:grid-cols-1 max-[500px]:my-0 pt-8 pb-8 px-2 h-fit"
                >
                    {
                        img_urls.map((url) => (
                            <div class="overflow-hidden w-fit h-fit">
                                <img
                                    id="img_static"
                                    src={url}
                                    alt="img"
                                    class="w-full h-auto object-cover transition-all p-[2px] rounded-[3.5px]"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", () => {
                if ("scrollRestoration" in history) {
                    history.scrollRestoration = "manual";
                }

                // const createCenterMarker = () => {
                //     const marker = document.createElement("div");
                //     marker.style.position = "fixed";
                //     marker.style.top = "50%";
                //     marker.style.left = "0";
                //     marker.style.width = "100%";
                //     marker.style.height = "1px";
                //     marker.style.backgroundColor = "rgba(255, 0, 0, 0.3)";
                //     marker.style.zIndex = "100";
                //     marker.style.pointerEvents = "none";
                //     document.body.appendChild(marker);
                // };
                // createCenterMarker();

                const images = document.images;
                const imgs_second_view = document.querySelectorAll(
                    "#img_scroll_area_two img",
                );
                const progress = document.getElementById("progress");
                const loader = document.getElementById("loader");
                const content = document.getElementById("content");
                const view_change_button =
                    document.getElementById("view_change_button");
                const image_area_one = document.getElementById(
                    "img_scroll_area_one",
                );
                const image_area_two = document.getElementById(
                    "img_scroll_area_two",
                );
                const image_overlay = document.getElementById("image_overlay");

                let loaded = 0;
                let view = false;
                const total = images.length;

                const checkImagesInCenter = () => {
                    const middleZoneHeight = window.innerHeight * 0.005;
                    const middleTop =
                        window.innerHeight / 2 - middleZoneHeight / 2;
                    const middleBottom =
                        window.innerHeight / 2 + middleZoneHeight / 2;

                    const imgContainers =
                        document.querySelectorAll(".image-container");

                    imgContainers.forEach((container) => {
                        const rect = container.getBoundingClientRect();
                        const isInCenter =
                            rect.top < middleBottom && rect.bottom > middleTop;

                        if (isInCenter) {
                            container.classList.add("in-center");
                        } else {
                            container.classList.remove("in-center");
                        }
                    });
                };

                let resizeTimeout: ReturnType<typeof setTimeout> | null = null;
                window.addEventListener("resize", () => {
                    if (resizeTimeout !== null) {
                        clearTimeout(resizeTimeout);
                    }
                    resizeTimeout = setTimeout(checkImagesInCenter, 100);
                });

                const change_view = () => {
                    if (view) {
                        image_area_two!.style.opacity = "0";

                        setTimeout(() => {
                            image_area_two!.style.display = "none";
                            image_area_one!.style.display = "flex";

                            window.scrollTo({ top: 0, behavior: "instant" });

                            setTimeout(() => {
                                image_area_one!.style.opacity = "1";
                                checkImagesInCenter();
                            }, 50);
                        }, 500);
                    } else {
                        image_area_one!.style.opacity = "0";

                        setTimeout(() => {
                            image_area_one!.style.display = "none";
                            image_area_two!.style.display = "flex";

                            window.scrollTo({ top: 0, behavior: "instant" });

                            setTimeout(() => {
                                image_area_two!.style.opacity = "1";
                            }, 50);
                        }, 500);
                    }

                    view = !view;
                    (image_overlay as any).src = "";
                };

                view_change_button?.addEventListener("click", () => {
                    view_change_button.classList.add("active");
                    setTimeout(() => {
                        view_change_button.classList.remove("active");
                    }, 200);

                    change_view();
                });

                const update_perc = () => {
                    loaded++;
                    const perc = Math.round((loaded / total) * 100).toString();
                    if (progress) progress.textContent = perc;

                    if (loaded === total) {
                        if (loader) loader.style.display = "none";
                        if (content) {
                            content.style.visibility = "visible";
                            content.style.opacity = "1";
                        }

                        checkImagesInCenter();
                    }
                };

                for (let i = 0; i < total; i++) {
                    if (images[i].complete) {
                        update_perc();
                    } else {
                        images[i].addEventListener("load", update_perc);
                        images[i].addEventListener("error", update_perc);
                    }
                }

                let scrollTimeout: ReturnType<typeof setTimeout> | null;
                window.addEventListener("scroll", () => {
                    if (scrollTimeout) return;

                    scrollTimeout = setTimeout(() => {
                        checkImagesInCenter();
                        scrollTimeout = null;
                    }, 20);
                });

                imgs_second_view.forEach((img) => {
                    img.addEventListener("mouseover", () => {
                        (image_overlay as any).src = (img as any).src;
                        (image_overlay as any).style.opacity = "1";
                        (content as any).style.opacity = "0.5";
                        (content as any).style.filter = "blur(10px)";
                    });

                    img.addEventListener("mouseleave", () => {
                        (image_overlay as any).style.opacity = "0";
                        (content as any).style.opacity = "1";

                        (content as any).style.filter = "blur(0px)";
                    });
                });
            });
        </script>
    </div>
</div>
