---
import "../styles/global.css";

type Image = {
    url: string;
    transformed_url: string;
};

const res = await fetch(
    "https://subtle-palmier-ae368e.netlify.app/api/data.json",
    // "http://localhost:8888/api/data.json",
);
const res_obj = await res.json();
const imgs: Image[] = res_obj.resources;

const first_img: string = imgs[1].transformed_url;
const img_urls = imgs.map((img) => img.transformed_url);
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anastasia</title>
    {img_urls.map((url) => <link rel="preload" as="image" href={url} />)}
</head>

<div class="text-[12px] bg-white">
    <div
        class="fixed px-4 mt-[49vh] w-screen text-white/80 mix-blend-difference h-2 z-30"
    >
        <div class="flex justify-between">
            <div>
                <p>Anastasia Potapova</p>
            </div>
            <div class="flex gap-4">
                <p class="active:text-black/20 cursor-pointer">Instagram</p>
                <p class="active:text-black/20 cursor-pointer">E-mail</p>
            </div>
        </div>
    </div>
    <div
        class="flex flex-col items-center justify-center max-[500px]:w-[100vw]"
    >
        <div
            id="img_wrapper"
            class="flex flex-col gap-4 w-fit my-4 items-center max-[500px]:mt-0 overflow-hidden"
        >
            <img
                id="img_static"
                src={first_img}
                alt="first_img"
                class="h-[80vh] max-[500px]:h-auto max-[500px]:w-full object-cover transition-all duration-600 ease-in-out handle_blur z-10"
            />
            {
                img_urls.slice(2).map((url) => {
                    return (
                        <img
                            loading="eager"
                            decoding="async"
                            id="img_static"
                            src={url}
                            alt="img"
                            class="h-[80vh] max-[500px]:h-auto max-[500px]:w-full object-cover transition-all duration-600 ease-out handle_blur blur-xs"
                        />
                    );
                })
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        if ("scrollRestoration" in history) {
            history.scrollRestoration = "manual";
        }

        const img_wrapper = document.getElementById("img_wrapper");

        const imgs = img_wrapper?.querySelectorAll<HTMLImageElement>("img");
        const text = document.querySelector(".fixed");

        imgs?.forEach((img) => {
            img.decode()
                .then(() => {
                    console.log(`Image ${img.src} decoded successfully!`);
                    img.setAttribute("decoded", "true");
                })
                .catch((err) => {
                    console.error(`Error decoding image ${img.src}:`, err);
                });
        });

        window.addEventListener("scroll", () => {
            imgs?.forEach((img) => {
                if (img instanceof HTMLImageElement) {
                    const img_rect = img.getBoundingClientRect();
                    const text_rect = text?.getBoundingClientRect();
                    if (
                        text_rect &&
                        img_rect.top <= text_rect?.bottom &&
                        img_rect.bottom >= text_rect?.top
                    ) {
                        img.classList.remove("blur-xs");
                    } else {
                        img.classList.add("blur-xs");
                    }
                }
            });
        });
    });
</script>
