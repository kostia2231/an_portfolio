---
import "../styles/global.css";
type Image = {
    transformed_url: string;
    transformed_url_blured: string;
};
const res = await fetch("http://anastasiiapotapova.com/api/data.json");
const res_obj = await res.json();
const imgs: Image[] = res_obj.resources;
const img_urls = imgs.map((img) => img.transformed_url);
const imgs_urls_blured = imgs.map((img) => img.transformed_url_blured);
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anastasiia Potapova</title>
    {img_urls.map((url) => <link rel="preload" as="image" href={url} />)}
    {
        imgs_urls_blured.map((url) => (
            <link rel="preload" as="image" href={url} />
        ))
    }
    <script is:inline src="https://unpkg.com/lenis@1.3.1/dist/lenis.min.js"
    ></script>
    <link rel="icon" href="/favicon-16x16.png" type="image/png" />
</head>

<div
    id="leftDevider"
    class="fixed w-[100vw] h-[50lvh] bg-white z-20 translate-y-0 transition-transform duration-700 max-[600px]:duration-900 [transition-timing-function:var(--bezier)]"
>
</div>
<div
    id="rightDevider"
    class="fixed w-[100vw] h-[50lvh] bg-white z-20 translate-y-0 transition-transform duration-700 max-[600px]:duration-900 bottom-0 [transition-timing-function:var(--bezier)]"
>
</div>

<div style="visibility: visible;" id="body">
    <div class="text-[9px] max-[500px]:text-[9px] bg-white h-fit">
        <div
            class="mt-4 fixed w-screen z-30 text-white max-[500px]:hidden handle_from_top mix-blend-difference"
        >
            <div class="text-center">
                <a
                    id="view_change_button"
                    class="cursor-pointer hover:opacity-50 inline-block px-3 rounded-sm"
                    >VIEW</a
                >
            </div>
        </div>
        <div
            class="mb-4 fixed w-screen z-30 text-white bottom-0 handle_from_bottom max-[500px]:text-white mix-blend-difference"
        >
            <div class="text-center">ALL RIGHTS RESERVED<br />2025</div>
            <!-- <div class="text-center">WEBSITE BY: C8.STUDIO</div> -->
        </div>
        <div
            class="fixed px-4 mt-[50vh] max-[500px]:px-4 w-screen max-[500px]:mt-[47vh] z-30 max-w-[1440px] pointer-events-none max-[500px]:text-white max-[500px]:mix-blend-difference"
            id="middle"
        >
            <div class="flex justify-between">
                <div class="handle_from_left">
                    <p>ANASTASIIA POTAPOVA</p>
                </div>
                <div class="flex gap-4 handle_from_right pointer-events-auto">
                    <a href="https://www.instagram.com/ana.sta.sea/">
                        <p class="cursor-pointer hover:opacity-50">INSTAGRAM</p>
                    </a>
                    <a href="mailto:potapova.nana@gmail.com">
                        <p class="cursor-pointer hover:opacity-50">Eâ€”MAIL</p>
                    </a>
                </div>
            </div>
        </div>
        <div
            id="initial-loader"
            class="fixed inset-0 z-[999] flex bg-white text-black text-[9px] transition-opacity duration-700"
        >
            <span
                id="progress"
                class="m-auto mt-[50vh] max-[500px]:mt-[47vh] max-[501px]:mt-0"
            >
                LOADING
            </span>
        </div>

        <img
            src=""
            id="image_overlay"
            class="fixed h-[75vh] left-1/2 top-1/2 pointer-events-none z-10 transition-opacity duration-500 ease-out opacity-0"
        />

        <div
            id="content"
            style="visibility: hidden;"
            class="transition-all duration-400 ease-out opacity-0"
        >
            <div
                class="flex flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:pb-[60vh] max-[500px]:mx-0 w-full transition-all duration-500 ease-out opacity-100"
                id="img_scroll_area_one"
            >
                <div
                    id="img_wrapper"
                    class="flex flex-nowrap flex-col justify-center gap-1 max-[500px]:gap-1 items-center overflow-hidden my-11 max-[500px]:my-0 max-[500px]:grid-cols-1 w-fit pb-12 max-[500px]:pb-0 opacity-100"
                >
                    {
                        img_urls.map((url, index) => (
                            <div
                                class="origin-bottom transition-transform duration-1000 max-[600px]:duration-1500 [transition-timing-function:var(--bezierIMG)] scale-[0.8] image-container relative w-fit overflow-hidden"
                                id="img_group"
                                data-index={index}
                            >
                                <img
                                    src={imgs_urls_blured[index]}
                                    alt="img blur"
                                    class="image-blurred max-[500px]:h-auto max-[500px]:w-full object-cover h-[75vh] transition-all duration-500 ease-in-out w-fit relative"
                                />
                                <img
                                    src={url}
                                    alt="img sharp"
                                    loading="lazy"
                                    class="image-sharp max-[500px]:h-auto max-[500px]:w-full object-cover h-[75vh] transition-all duration-500 ease-in-out w-fit relative"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>

            <div
                class="hidden flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:mx-0 w-full transition-all opacity-0"
                id="img_scroll_area_two"
            >
                <div
                    class="flex flex-wrap mx-auto my-3 pt-3 pb-12 px-4 w-[70vw]"
                >
                    {
                        img_urls.map((url) => (
                            <div class="w-[20%] overflow-hidden h-fit m-auto">
                                <img
                                    id="img_static"
                                    src={url}
                                    alt="img"
                                    class="w-full h-full object-cover transition-all p-5"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>
        </div>

        <script is:inline>
            document.addEventListener("DOMContentLoaded", () => {
                document.documentElement.style.setProperty(
                    "--bezier",
                    "cubic-bezier(0.91, 0.3, 0.51, 0.24)",
                );

                document.documentElement.style.setProperty(
                    "--bezierIMG",
                    "cubic-bezier(0.27, 0.51, 0.32, 0.99)",
                );

                const leftDevider = document.getElementById("leftDevider");
                const rightDevider = document.getElementById("rightDevider");
                const imgGroup = document.querySelectorAll("#img_group");

                const triggerOpeningAnimation = () => {
                    requestAnimationFrame(() => {
                        setTimeout(() => {
                            leftDevider.style.transform =
                                "translate3d(0, -100%, 0)";
                            rightDevider.style.transform =
                                "translate3d(0, 100%, 0)";
                        }, 500);

                        setTimeout(() => {
                            requestAnimationFrame(() => {
                                imgGroup?.forEach((img) => {
                                    img.style.transform = "scale3d(1, 1, 1)";
                                    img.classList.remove("scale-[0.8]");
                                    img.classList.add("scale-100");
                                });
                            });
                        }, 500);
                    });
                };

                if ("scrollRestoration" in history) {
                    history.scrollRestoration = "manual";
                }

                if (typeof window.Lenis === "function") {
                    const lenis = new window.Lenis({
                        duration: 1,
                        direction: "vertical",
                        smooth: true,
                        smoothTouch: false,
                    });

                    window.lenisInstance = lenis;

                    function raf(time) {
                        lenis.raf(time);
                        requestAnimationFrame(raf);
                    }

                    requestAnimationFrame(raf);
                }

                const images = document.images;
                const imgs_second_view = document.querySelectorAll(
                    "#img_scroll_area_two img",
                );
                const content = document.getElementById("content");
                const view_change_button =
                    document.getElementById("view_change_button");
                const image_area_one = document.getElementById(
                    "img_scroll_area_one",
                );
                const image_area_two = document.getElementById(
                    "img_scroll_area_two",
                );
                const image_overlay = document.getElementById("image_overlay");

                let loaded = 0;
                const total = images.length;

                let rafId = null;

                const checkImagesInCenter = () => {
                    if (rafId) return;

                    rafId = requestAnimationFrame(() => {
                        const middleZoneHeight = window.innerHeight * 0.005;
                        const middleTop =
                            window.innerHeight / 2 - middleZoneHeight / 2;
                        const middleBottom =
                            window.innerHeight / 2 + middleZoneHeight / 2;

                        const imgContainers =
                            document.querySelectorAll(".image-container");

                        imgContainers.forEach((container) => {
                            const rect = container.getBoundingClientRect();
                            const isInCenter =
                                rect.top < middleBottom &&
                                rect.bottom > middleTop;

                            container.classList.toggle("in-center", isInCenter);
                        });

                        rafId = null;
                    });
                };

                let resizeRafId = null;
                window.addEventListener("resize", () => {
                    if (resizeRafId) return;

                    resizeRafId = requestAnimationFrame(() => {
                        checkImagesInCenter();
                        resizeRafId = null;
                    });
                });

                let view = false;
                const change_view = () => {
                    if (view) {
                        image_area_two.style.opacity = "0";
                        image_area_two.style.transform = "translate3d(0, 0, 0)";

                        setTimeout(() => {
                            image_area_two.style.display = "none";
                            image_area_one.style.display = "flex";

                            window.scrollTo({ top: 0, behavior: "instant" });

                            setTimeout(() => {
                                image_area_one.style.opacity = "1";
                                image_area_one.style.transform =
                                    "translate3d(0, 0, 0)";
                                checkImagesInCenter();
                            }, 50);
                        }, 500);
                    } else {
                        image_area_one.style.opacity = "0";
                        image_area_one.style.transform = "translate3d(0, 0, 0)";

                        setTimeout(() => {
                            image_area_one.style.display = "none";
                            image_area_two.style.display = "flex";

                            window.scrollTo({ top: 0, behavior: "instant" });

                            setTimeout(() => {
                                image_area_two.style.opacity = "1";
                                image_area_two.style.transform =
                                    "translate3d(0, 0, 0)";
                            }, 50);
                        }, 500);
                    }

                    view = !view;
                    image_overlay.src = "";
                };

                view_change_button?.addEventListener("click", () => {
                    view_change_button.classList.add("active");
                    setTimeout(() => {
                        view_change_button.classList.remove("active");
                    }, 200);
                    change_view();
                });

                const update_on_image_load = () => {
                    loaded++;
                    if (loaded === total) {
                        const initialLoader =
                            document.getElementById("initial-loader");
                        if (initialLoader) {
                            initialLoader.style.opacity = "0";
                            setTimeout(() => {
                                initialLoader.remove();
                            }, 500);
                        }

                        if (content) {
                            content.style.visibility = "visible";
                            content.style.opacity = "1";
                        }

                        checkImagesInCenter();
                        triggerOpeningAnimation();
                    }
                };

                for (let i = 0; i < total; i++) {
                    if (images[i].complete) {
                        update_on_image_load();
                    } else {
                        images[i].addEventListener(
                            "load",
                            update_on_image_load,
                        );
                        images[i].addEventListener(
                            "error",
                            update_on_image_load,
                        );
                    }
                }

                let scrollRafId = null;
                window.addEventListener(
                    "scroll",
                    () => {
                        if (scrollRafId) return;

                        scrollRafId = requestAnimationFrame(() => {
                            checkImagesInCenter();
                            scrollRafId = null;
                        });
                    },
                    { passive: true },
                );

                imgs_second_view.forEach((img) => {
                    let hoverRafId = null;

                    img.addEventListener("mouseover", () => {
                        if (hoverRafId) return;

                        hoverRafId = requestAnimationFrame(() => {
                            image_overlay.src = img.src;
                            image_overlay.style.opacity = "1";
                            image_overlay.style.transform =
                                "translate3d(-50%, -50%, 0)";

                            content.style.opacity = "0.5";
                            content.style.filter = "blur(10px)";
                            content.style.transform = "translate3d(0, 0, 0)";

                            hoverRafId = null;
                        });
                    });

                    img.addEventListener("mouseleave", () => {
                        if (hoverRafId) return;

                        hoverRafId = requestAnimationFrame(() => {
                            image_overlay.style.opacity = "0";
                            image_overlay.style.transform =
                                "translate3d(-50%, -50%, 0)";

                            content.style.opacity = "1";
                            content.style.filter = "blur(0px)";
                            content.style.transform = "translate3d(0, 0, 0)";

                            hoverRafId = null;
                        });
                    });
                });
            });
        </script>
    </div>
</div>
