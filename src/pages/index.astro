---
import "../styles/global.css";
type Image = {
    url: string;
    transformed_url: string;
};
const res = await fetch(
    "https://subtle-palmier-ae368e.netlify.app/api/data.json",
);
const res_obj = await res.json();
const imgs: Image[] = res_obj.resources;
const img_urls = imgs.map((img) => img.transformed_url);
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anastasiia Potapova</title>
    {img_urls.map((url) => <link rel="preload" as="image" href={url} />)}
    <link rel="icon" href="/favicon-16x16.png" type="image/png" />
    <link
        rel="stylesheet"
        href="https://unpkg.com/lenis@1.3.1/dist/lenis.css"
    />
    <script is:inline src="https://unpkg.com/lenis@1.3.1/dist/lenis.min.js"
    ></script>

    <!-- Добавляем стили для blur напрямую, без зависимости от JavaScript -->
    <style is:inline>
        .blur-overlay {
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
        }
        .no-blur {
            backdrop-filter: blur(0) !important;
            -webkit-backdrop-filter: blur(0) !important;
        }

        /* Добавляем стили для анимации смены галерей */
        #img_scroll_area_one,
        #img_scroll_area_two {
            transition: opacity 0.5s ease-out;
        }
    </style>
</head>
<div style="visibility: visible;" id="body">
    <div class="text-[10px] max-[500px]:text-[10px] bg-white h-fit">
        <div
            class="mt-4 fixed w-screen z-30 text-white max-[500px]:hidden handle_from_top mix-blend-difference"
        >
            <div class="text-center">
                <a
                    id="view_change_button"
                    class="cursor-pointer hover:opacity-50 inline-block py-1 px-3 rounded-sm"
                    >VIEW</a
                >
            </div>
        </div>
        <div
            class="mb-4 fixed w-screen z-30 text-white bottom-0 handle_from_bottom max-[500px]:text-white mix-blend-difference"
        >
            <div class="text-center">ALL RIGHTS RESERVED</div>

            <div class="text-center">©2025</div>
        </div>
        <div
            class="fixed px-4 mt-[50vh] max-[500px]:px-4 w-screen max-[500px]:mt-[47vh] z-30 max-w-[1440px] pointer-events-none max-[500px]:text-white max-[500px]:mix-blend-difference"
            id="middle"
        >
            <div class="flex justify-between">
                <div class="handle_from_left">
                    <p>ANASTASIIA POTAPOVA</p>
                </div>
                <div class="flex gap-4 handle_from_right pointer-events-auto">
                    <a href="https://www.instagram.com/ana.sta.sea/">
                        <p class="cursor-pointer hover:opacity-50">INSTAGRAM</p>
                    </a>
                    <a href="mailto:potapova.nana@gmail.com">
                        <p class="cursor-pointer hover:opacity-50">E-MAIL</p>
                    </a>
                </div>
            </div>
        </div>
        <div id="loader" class="flex">
            <p class="m-auto mt-[50vh] max-[500px]:mt-[47vh]">
                <span id="progress">0</span>%
            </p>
        </div>

        <img
            src=""
            id="image_overlay"
            class="rounded-xs fixed h-[80vh] left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none z-10 transition-opacity duration-500 ease-out opacity-0"
        />
        <div
            id="content"
            style="visibility: hidden;"
            class="transition-all duration-500 ease-out"
        >
            <div
                class="flex flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:pb-15 max-[500px]:mx-0 w-full transition-all duration-500 ease-out opacity-100"
                id="img_scroll_area_one"
            >
                <div
                    id="img_wrapper"
                    class="flex flex-nowrap flex-col justify-center gap-1 max-[500px]:gap-1 items-center overflow-hidden my-11 max-[500px]:my-0 max-[500px]:grid-cols-1 w-fit pb-12 max-[500px]:pb-0 opacity-100"
                >
                    {
                        img_urls.map((url, index) => (
                            <div
                                class="relative w-fit overflow-hidden rounded-xs "
                                id="img_group"
                            >
                                <div
                                    id="blur_overlay"
                                    data-index={index}
                                    class="bg-white/1 blur-overlay overflow-x-clip right-0 w-full h-full absolute inset-0 transition-all duration-700 ease-in-out z-10 will-change-[backdrop-filter]"
                                />
                                <img
                                    id="img_static"
                                    data-index={index}
                                    src={url}
                                    alt="img"
                                    class="max-[500px]:h-auto max-[500px]:w-full object-cover rounded-xs h-[75vh] transition-all duration-700 ease-in-out w-auto relative z-0"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>

            <div
                class="hidden flex-col items-center justify-center max-[500px]:w-[100vw] max-[500px]:p-1 max-[500px]:mx-0 w-full transition-all duration-500 ease-out opacity-0"
                id="img_scroll_area_two"
            >
                <div
                    class="grid grid-cols-4 w-full max-w-[800px] mx-auto my-4 max-[500px]:grid-cols-1 max-[500px]:my-0 pt-8 pb-8 px-2 h-fit"
                >
                    {
                        img_urls.map((url) => (
                            <div class="overflow-hidden w-fit h-fit">
                                <img
                                    id="img_static"
                                    src={url}
                                    alt="img"
                                    class="w-full h-auto object-cover transition-all duration-500 ease-out p-[2px] rounded-[3.5px]"
                                />
                            </div>
                        ))
                    }
                </div>
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", () => {
                if ("scrollRestoration" in history) {
                    history.scrollRestoration = "manual";
                }

                // Применяем blur до загрузки всей страницы, без задержки
                const apply_blur_immediately = () => {
                    const blur_overlay =
                        document.querySelectorAll("#blur_overlay");
                    blur_overlay.forEach((b) => {
                        // Классы в стилях уже определены в head
                        if (!b.classList.contains("blur-overlay")) {
                            b.classList.add("blur-overlay");
                        }
                    });
                };

                // Вызываем сразу, не дожидаясь таймаута
                apply_blur_immediately();

                // Инициализация Lenis скроллера
                const initLenis = () => {
                    if (typeof (window as any).Lenis === "function") {
                        const lenis = new (window as any).Lenis({
                            duration: 0.8,
                            easing: (t: number) =>
                                Math.min(1, 1.001 - Math.pow(2, -10 * t)),
                            direction: "vertical",
                            smooth: true,
                            smoothTouch: true,
                            touchMultiplier: 2,
                        });

                        (window as any).lenisInstance = lenis;

                        function raf(time: number) {
                            lenis.raf(time);
                            requestAnimationFrame(raf);
                        }

                        requestAnimationFrame(raf);

                        const check_elements = () => {
                            const middleZoneHeight = window.innerHeight * 0.001;
                            const middleTop =
                                window.innerHeight / 2 - middleZoneHeight / 2;
                            const middleBottom =
                                window.innerHeight / 2 + middleZoneHeight / 2;

                            const imgGroups = document.querySelectorAll(
                                "#img_scroll_area_one #img_group",
                            );

                            imgGroups.forEach((group) => {
                                const rect = group.getBoundingClientRect();
                                const isInCenter =
                                    rect.top < middleBottom &&
                                    rect.bottom > middleTop;

                                const blurDiv =
                                    group.querySelector("#blur_overlay");
                                if (blurDiv) {
                                    if (isInCenter) {
                                        blurDiv.classList.add("no-blur");
                                    } else {
                                        blurDiv.classList.remove("no-blur");
                                    }
                                }
                            });
                        };

                        lenis.on("scroll", check_elements);
                    }
                };

                // Инициализируем скроллер, но с небольшой задержкой
                setTimeout(initLenis, 200);

                const images = document.images;
                const imgs_first_view = document.querySelectorAll(
                    "#img_scroll_area_one img",
                );
                const imgs_second_view = document.querySelectorAll(
                    "#img_scroll_area_two img",
                );
                const progress = document.getElementById("progress");
                const loader = document.getElementById("loader");
                const content = document.getElementById("content");
                const view_change_button =
                    document.getElementById("view_change_button");
                const image_area_one = document.getElementById(
                    "img_scroll_area_one",
                );
                const image_area_two = document.getElementById(
                    "img_scroll_area_two",
                );
                const image_overlay = document.getElementById("image_overlay");

                let loaded = 0;
                let view = false;
                const total = images.length;

                const change_view = () => {
                    // Добавляем анимацию при смене галереи
                    if (view) {
                        // Плавно скрываем вторую галерею
                        image_area_two!.style.opacity = "0";

                        setTimeout(() => {
                            image_area_two!.style.display = "none";
                            image_area_one!.style.display = "flex";

                            // Небольшая задержка перед показом первой галереи
                            setTimeout(() => {
                                image_area_one!.style.opacity = "1";
                            }, 50);
                        }, 500); // Ждем завершения анимации исчезновения
                    } else {
                        // Плавно скрываем первую галерею
                        image_area_one!.style.opacity = "0";

                        setTimeout(() => {
                            image_area_one!.style.display = "none";
                            image_area_two!.style.display = "flex";

                            // Небольшая задержка перед показом второй галереи
                            setTimeout(() => {
                                image_area_two!.style.opacity = "1";
                            }, 50);
                        }, 500); // Ждем завершения анимации исчезновения
                    }

                    view = !view;
                    window.scrollTo(0, 0);

                    if ((window as any).lenisInstance) {
                        (window as any).lenisInstance.scrollTo(0, {
                            immediate: true,
                        });
                    }

                    show_first();
                    (image_overlay as any).src = "";
                };

                view_change_button?.addEventListener("click", () => {
                    // Добавляем визуальный эффект нажатия
                    view_change_button.classList.add("active");
                    setTimeout(() => {
                        view_change_button.classList.remove("active");
                    }, 200);

                    change_view();
                });

                const show_first = () => {
                    const firstBlurDiv = document.querySelector(
                        "#img_scroll_area_one #img_group #blur_overlay",
                    );
                    if (firstBlurDiv) {
                        firstBlurDiv.classList.add("no-blur");
                    }
                };

                const update_perc = () => {
                    loaded++;
                    const perc = Math.round((loaded / total) * 100).toString();
                    if (progress) progress.textContent = perc;

                    if (loaded === total) {
                        if (loader) loader.style.display = "none";
                        if (content) content.style.visibility = "visible";

                        show_first();
                    }
                };

                for (let i = 0; i < total; i++) {
                    if (images[i].complete) {
                        update_perc();
                    } else {
                        images[i].addEventListener("load", update_perc);
                        images[i].addEventListener("error", update_perc);
                    }
                }

                const onScroll = () => {
                    requestAnimationFrame(() => {
                        const middleZoneHeight = window.innerHeight * 0.001;
                        const middleTop =
                            window.innerHeight / 2 - middleZoneHeight / 2;
                        const middleBottom =
                            window.innerHeight / 2 + middleZoneHeight / 2;

                        const imgGroups = document.querySelectorAll(
                            "#img_scroll_area_one #img_group",
                        );

                        imgGroups.forEach((group) => {
                            const rect = group.getBoundingClientRect();
                            const isInCenter =
                                rect.top < middleBottom &&
                                rect.bottom > middleTop;

                            const blurDiv =
                                group.querySelector("#blur_overlay");
                            if (blurDiv) {
                                if (isInCenter) {
                                    blurDiv.classList.add("no-blur");
                                } else {
                                    blurDiv.classList.remove("no-blur");
                                }
                            }
                        });
                    });
                };

                window.addEventListener("scroll", onScroll);

                imgs_second_view.forEach((img) => {
                    img.addEventListener("mouseover", () => {
                        (image_overlay as any).src = (img as any).src;
                        (image_overlay as any).style.opacity = "1";
                        (content as any).style.opacity = "0.2";
                    });

                    img.addEventListener("mouseleave", () => {
                        (image_overlay as any).style.opacity = "0";
                        (content as any).style.opacity = "1";
                    });
                });
            });
        </script>
    </div>
</div>
