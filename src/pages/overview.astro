---
import "../styles/global.css";

type Image = {
    url: string;
    transformed_url: string;
};

const res = await fetch(
    "https://subtle-palmier-ae368e.netlify.app/api/data.json",
    // "http://localhost:8888/api/data.json",
);
const res_obj = await res.json();
const imgs: Image[] = res_obj.resources;
const img_urls = imgs.map((img) => img.transformed_url);
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anastasia Potapova</title>
    {img_urls.map((url) => <link rel="preload" as="image" href={url} />)}

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
        href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap"
        rel="stylesheet"
    />
</head>

<div class="text-[12px] bg-white flex justify-center">
    <div
        class="fixed px-4 mt-[50vh] max-[500px]:px-4 w-screen text-white max-[500px]:mt-4 mix-blend-difference z-30 bg-transparent pointer-events-none max-w-[1440px]"
    >
        <div class="flex justify-between">
            <div class="handle_from_left">
                <p>Anastasia Potapova</p>
            </div>
            <div class="flex gap-4 handle_from_right pointer-events-auto">
                <a>
                    <p class="cursor-pointer hover:opacity-50">Instagram</p>
                </a>
                <p class="cursor-pointer hover:opacity-50">E-mail</p>
            </div>
        </div>
    </div>
    <div
        id="img_wrapper"
        class="handle_animation_gallery w-[800px] flex flex-wrap gap-1 justify-center overflow-hidden m-4 max-[500px]:my-0 max-[500px]:grid-cols-1 handle_blur"
    >
        {
            img_urls.map((url, index) => {
                return (
                    <a
                        href={`/?img=${index}`}
                        class="text-gray-200 transition-all w-fit h-fit hover:opacity-90"
                    >
                        <img
                            id="img_static"
                            src={url}
                            alt="img"
                            class="max-[500px]:h-auto max-[500px]:w-full object-cover handle_blur rounded-xs h-[25vh] max-w-full transition-all"
                        />
                    </a>
                );
            })
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            console.log(`no-one was here.`);

            if ("scrollRestoration" in history) {
                history.scrollRestoration = "manual";
            }

            const img_wrapper = document.getElementById("img_wrapper");
            const imgs =
                img_wrapper?.querySelectorAll<HTMLImageElement>(
                    "img[id=img_static]",
                );

            window.addEventListener("load", () => {
                imgs?.forEach((img) => {
                    img.decode()
                        .then(() => {
                            img.setAttribute("decoded", "true");
                        })
                        .catch((err) => {
                            console.error(
                                `Error decoding image ${img.src}:`,
                                err,
                            );
                        });
                });
            });
        });
    </script>
</div>
